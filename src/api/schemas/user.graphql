type User {
  id: ID!
  username: String!
  email: String!
  createdAt: String!
}

type OutputUser {
  id: ID!
  username: String!
  email: String!
}

type TokenMessage {
  token: String
  message: String!
  user: OutputUser!
}

type UserMessage {
  message: String!
  user: OutputUser!
}

input Credentials {
  username: String!
  password: String!
}

input UserInput {
  username: String!
  email: String!
  password: String!
}

input UserModify {
  username: String
  email: String
  password: String
}

type Query {
  users: [User]
  userById(id: ID!): User
}

type Mutation {
  login(credentials: Credentials!): TokenMessage
  register(user: UserInput!): UserMessage
  updateUser(user: UserModify!): UserMessage
  deleteUser: UserMessage
  updateUserAsAdmin(user: UserModify!, id: ID!): UserMessage
  deleteUserAsAdmin(id: ID!): UserMessage
}
